{"version":3,"sources":["Components/User/UserStatsGraphs.module.css","Components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","React","useState","graph","setGraph","total","setTotal","useEffect","length","graphData","map","datanew","x","title","y","acessos","reduce","anterior","proximo","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,uHCqDjGC,UAlDS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,IAAMC,SAAS,GAAzC,mBAAOG,EAAP,KAAcC,EAAd,KAgBA,OAdAL,IAAMM,WAAU,WACd,GAAoB,IAAhBP,EAAKQ,OAAc,CACrB,IAAMC,EAAYT,EAAKU,KAAI,SAACC,GAC1B,MAAO,CAAEC,EAAGD,EAAQE,MAAOC,GAAIH,EAAQI,YAEzCX,EAASK,GACTH,EACEN,EACGU,KAAI,qBAAGK,WACPC,QAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,SAG/C,CAAClB,IAGF,0BAASmB,UAAS,UAAKC,IAAOjB,MAAZ,cAAlB,UACE,qBAAKgB,UAAS,UAAKC,IAAOf,MAAZ,YAAqBe,IAAOC,WAA1C,SACE,yCAAYhB,OAEd,qBAAKc,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CACErB,KAAMG,EACNmB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACL5B,KAAM,CACJ6B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,OAAQ,CACNC,SAAU,GACVC,KAAM,aAKd,qBAAKf,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYc,UAAU,QAAQnC,KAAMG","file":"static/js/4.b2cccf64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__3yA2s\",\"graphItem\":\"UserStatsGraphs_graphItem__1CtWF\",\"total\":\"UserStatsGraphs_total__3f6e2\"};","import React from 'react';\r\nimport styles from './UserStatsGraphs.module.css';\r\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\r\n\r\nconst UserStatsGraphs = ({ data }) => {\r\n  const [graph, setGraph] = React.useState([]);\r\n  const [total, setTotal] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    if (data.length !== 0) {\r\n      const graphData = data.map((datanew) => {\r\n        return { x: datanew.title, y: +datanew.acessos };\r\n      });\r\n      setGraph(graphData);\r\n      setTotal(\r\n        data\r\n          .map(({ acessos }) => +acessos)\r\n          .reduce((anterior, proximo) => anterior + proximo),\r\n      );\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <section className={`${styles.graph} animeLeft`}>\r\n      <div className={`${styles.total} ${styles.graphItem}`}>\r\n        <p>Acessos:{total}</p>\r\n      </div>\r\n      <div className={styles.graphItem}>\r\n        <VictoryPie\r\n          data={graph}\r\n          innerRadius={50}\r\n          padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\r\n          style={{\r\n            data: {\r\n              fillOpacity: 0.9,\r\n              stroke: '#fff',\r\n              strokeWidth: 2,\r\n            },\r\n            labels: {\r\n              fontSize: 14,\r\n              fill: '#333',\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={styles.graphItem}>\r\n        <VictoryChart>\r\n          <VictoryBar alignment=\"start\" data={graph}></VictoryBar>\r\n        </VictoryChart>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserStatsGraphs;\r\n"],"sourceRoot":""}